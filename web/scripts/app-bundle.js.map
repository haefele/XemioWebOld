{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/services/auth-service.ts","src/pages/notes/index.ts","src/resources/elements/nav-bar/nav-bar.ts","src/pages/todo/index.ts"],"names":[],"mappings":";;;IAEA;QAAA;YAGS,YAAO,GAAG,cAAc,CAAC;QAUlC,CAAC;QARQ,6BAAe,GAAtB,UAAuB,MAA2B,EAAE,MAAc;YAChE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YAErB,MAAM,CAAC,GAAG,CAAC;gBACT,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,QAAQ,EAAE,mBAAmB,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE;gBACjG,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,kBAAkB,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAC;aACvF,CAAC,CAAC;QACL,CAAC;QACH,UAAC;IAAD,CAbA,AAaC,IAAA;IAbY,kBAAG;;;;;;;;ICFhB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;;;ICAF,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC,CAAC;QAExB,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAdD,8BAcC;;;;;;;;ICfD,mBAA0B,MAA8B;QACtD,MAAM,CAAC,eAAe,CAAC;YACrB,6BAA6B;YAC7B,4BAA4B;SAC7B,CAAC,CAAC;IACL,CAAC;IALD,8BAKC;;;;;;;;ICPD;QAAA;QAaA,CAAC;QAXU,gCAAU,GAAjB;YACI,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAEM,2BAAK,GAAZ;QAEA,CAAC;QAEM,4BAAM,GAAb;QAEA,CAAC;QACL,kBAAC;IAAD,CAbA,AAaC,IAAA;IAbY,kCAAW;;;;;;;;ICAxB;QAAA;QAKA,CAAC;QAHG,uBAAO,GAAP;YACI,KAAK,CAAC,KAAK,CAAC,CAAC;QACjB,CAAC;QACL,YAAC;IAAD,CALA,AAKC,IAAA;IALY,sBAAK;;;;;;;;;;;;;;;;;ICKlB,IAAa,MAAM;QAKf,gBAA0B,WAAyB;YAAzB,gBAAW,GAAX,WAAW,CAAc;QACnD,CAAC;QACL,aAAC;IAAD,CAPA,AAOC,IAAA;IAJG;QADC,4BAAQ,EAAE;kCACI,uBAAM;0CAAC;IAHb,MAAM;QADlB,8BAAU,EAAE;yCAM+B,0BAAW;OAL1C,MAAM,CAOlB;IAPY,wBAAM;;;;;;;;ICLnB;QAAA;QAEA,CAAC;QAAD,YAAC;IAAD,CAFA,AAEC,IAAA;IAFY,sBAAK","file":"app-bundle.js","sourcesContent":["import {RouterConfiguration, RouteConfig, Router, ConfiguresRouter} from \"aurelia-router\";\r\n\r\nexport class App implements ConfiguresRouter {\r\n\r\n  public router: Router;\r\n  public message = 'Hello World!';\r\n\r\n  public configureRouter(config: RouterConfiguration, router: Router): void | Promise<void> | PromiseLike<void> {\r\n    this.router = router;\r\n\r\n    config.map([\r\n      { route: [\"\", \"notes\"], moduleId: \"pages/notes/index\", name: \"notes\", title: \"Notes\", nav: true },\r\n      { route: \"todo\", moduleId: \"pages/todo/index\", name: \"todo\", title: \"Todo\", nav: true}\r\n    ]);\r\n  }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources([\n    \"bootstrap/css/bootstrap.css\",\n    \"./elements/nav-bar/nav-bar\"\n  ]);\n}\n","export class AuthService {\r\n\r\n    public isLoggedIn(): boolean {\r\n        return false;\r\n    }\r\n\r\n    public login(): void {\r\n        \r\n    }\r\n\r\n    public logout(): void {\r\n\r\n    }\r\n}","export class Index {\r\n    \r\n    clickMe() : void {\r\n        alert(\"Hoi\");\r\n    }\r\n}","import {bindable, autoinject} from \"aurelia-framework\";\r\nimport {Router} from \"aurelia-router\";\r\nimport {AuthService} from \"../../../services/auth-service\";\r\n\r\n@autoinject()\r\nexport class NavBar {\r\n\r\n    @bindable()\r\n    public router: Router;\r\n\r\n    public constructor(public authService : AuthService) {\r\n    }\r\n}","export class Index {\r\n    \r\n}"],"sourceRoot":".."}